-- MySQL Script generated by MySQL Workbench
-- Mon Oct 12 18:52:52 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema hotel
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema hotel
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `hotel` DEFAULT CHARACTER SET utf8 ;
USE `hotel` ;

-- -----------------------------------------------------
-- Table `hotel`.`tblclient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hotel`.`tblclient` (
  `intClientId` INT NOT NULL AUTO_INCREMENT COMMENT 'Идентификатор клиента\\n',
  `txtClientSurname` VARCHAR(30) NULL DEFAULT NULL COMMENT 'Фамилия клиента',
  `txtClientName` VARCHAR(25) NULL DEFAULT NULL COMMENT 'Имя клиента\\n',
  `txtClientSecondName` VARCHAR(30) NULL DEFAULT NULL COMMENT 'Отчество клиента',
  `txtClientAdress` VARCHAR(100) NULL DEFAULT NULL COMMENT 'Адрес клиента',
  `txtPassportNumber` VARCHAR(10) NULL DEFAULT NULL COMMENT 'Номер паспорта клиента',
  PRIMARY KEY (`intClientId`),
  UNIQUE INDEX `intClientId_UNIQUE` (`intClientId` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 54
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `hotel`.`tblroom`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hotel`.`tblroom` (
  `intRoomNumber` INT NOT NULL AUTO_INCREMENT COMMENT 'Номер комнаты',
  `txtRoomDescription` VARCHAR(255) NULL DEFAULT NULL COMMENT 'Описание комнаты',
  `intFloor` INT NULL DEFAULT NULL COMMENT 'Этаж\\n',
  `fitRoomPrice` DECIMAL(10,0) NULL DEFAULT NULL COMMENT 'Стоимость проживания в комнате в сутки\\n',
  PRIMARY KEY (`intRoomNumber`),
  UNIQUE INDEX `intRoomTable_UNIQUE` (`intRoomNumber` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 11
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `hotel`.`tblservicetype`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hotel`.`tblservicetype` (
  `intServiceTypeId` INT NOT NULL AUTO_INCREMENT COMMENT 'Идентификатор типа услуг',
  `txtServiceTypeName` VARCHAR(100) NULL DEFAULT NULL COMMENT 'Наименование типа услуги',
  `fltServiceTypePrice` DECIMAL(10,0) NULL DEFAULT NULL COMMENT 'Стоимость услуги',
  PRIMARY KEY (`intServiceTypeId`),
  UNIQUE INDEX `intServiceTypeId_UNIQUE` (`intServiceTypeId` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 11
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `hotel`.`tblvisit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hotel`.`tblvisit` (
  `intVisitId` INT NOT NULL AUTO_INCREMENT COMMENT 'Идентификатор факта проживания\\n',
  `intClientId` INT NULL DEFAULT NULL COMMENT 'Клиент\\n',
  `intRoomNumber` INT NULL DEFAULT NULL COMMENT 'Комната\\n',
  `datBegin` DATE NULL DEFAULT NULL COMMENT 'Дата приезда\\n',
  `datEnd` DATE NULL DEFAULT NULL,
  `fltRoomSum` DECIMAL(10,0) NULL DEFAULT NULL COMMENT 'Стоимость проживания',
  `fltServiceSum` DECIMAL(10,0) NULL DEFAULT NULL COMMENT 'Стоимость оказанных услуг',
  PRIMARY KEY (`intVisitId`),
  UNIQUE INDEX `intVisitId_UNIQUE` (`intVisitId` ASC) VISIBLE,
  INDEX `intClientId_idx` (`intClientId` ASC) VISIBLE,
  INDEX `intRoomNumber_idx` (`intRoomNumber` ASC) VISIBLE,
  CONSTRAINT `intClientId`
    FOREIGN KEY (`intClientId`)
    REFERENCES `hotel`.`tblclient` (`intClientId`),
  CONSTRAINT `intRoomNumber`
    FOREIGN KEY (`intRoomNumber`)
    REFERENCES `hotel`.`tblroom` (`intRoomNumber`)
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 42
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `hotel`.`tblservice`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hotel`.`tblservice` (
  `intServiceId` INT NOT NULL AUTO_INCREMENT COMMENT 'Идентификатор факта оказания услуг',
  `intServicetypeId` INT NULL DEFAULT NULL COMMENT 'Тип услуги\\n',
  `intVisitId` INT NULL DEFAULT NULL COMMENT 'Проживание',
  `intServiceCount` INT NULL DEFAULT NULL COMMENT 'Количество оказанных услуг\\n',
  `fltServiceSum` DECIMAL(10,0) NULL DEFAULT NULL COMMENT 'Сумма за оказанные услуги\\n',
  `datServiceDate` DATE NULL DEFAULT NULL COMMENT 'Дата оказания услуги',
  PRIMARY KEY (`intServiceId`),
  UNIQUE INDEX `intServiceId_UNIQUE` (`intServiceId` ASC) VISIBLE,
  INDEX `intServiceTypeId_idx` (`intServicetypeId` ASC) VISIBLE,
  INDEX `intVisitId_idx` (`intVisitId` ASC) VISIBLE,
  CONSTRAINT `intServiceTypeId`
    FOREIGN KEY (`intServicetypeId`)
    REFERENCES `hotel`.`tblservicetype` (`intServiceTypeId`),
  CONSTRAINT `intVisitId`
    FOREIGN KEY (`intVisitId`)
    REFERENCES `hotel`.`tblvisit` (`intVisitId`)
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 62
DEFAULT CHARACTER SET = utf8;

USE `hotel` ;

-- -----------------------------------------------------
-- procedure pr_report_clients
-- -----------------------------------------------------

DELIMITER $$
USE `hotel`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `pr_report_clients`()
BEGIN
	drop table if exists tmpclients;
    create temporary table if not exists tmpclients as 
	select txtClientSurname, txtClientName, txtClientSecondName, txtClientAdress, txtPassportNumber,
	tblvisit.datBegin, tblvisit.datEnd, tblvisit.intRoomNumber, tblvisit.fltRoomSum, intVisitId, tblclient.intClientId
	from tblclient, tblvisit
	where(tblclient.intClientId = tblvisit.intClientId)
	order by txtClientSurname;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure pr_report_room
-- -----------------------------------------------------

DELIMITER $$
USE `hotel`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `pr_report_room`(in roomNumber int)
BEGIN
	drop table if exists tmproom;
	create temporary table if not exists tmproom as 
	SELECT tblroom.intRoomNumber, tblroom.intFloor, tblroom.fltRoomPrice, tblroom.txtRoomDescription,
	tblclient.txtClientSurname, tblclient.txtClientName, tblclient.txtClientSecondName, 
    tblclient.txtClientAdress, tblclient.txtPassportNumber, tblvisit.datBegin, tblvisit.datEnd, tblvisit.intVisitId
	FROM tblroom, tblvisit, tblclient
	where (tblroom.intRoomNumber = roomNumber) and (tblroom.intRoomNumber = tblvisit.intRoomNumber) and (tblvisit.intClientId = tblclient.intClientId)
	order by tblroom.intRoomNumber;
END$$

DELIMITER ;
USE `hotel`;

DELIMITER $$
USE `hotel`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `hotel`.`tblservice_AFTER_DELETE`
AFTER DELETE ON `hotel`.`tblservice`
FOR EACH ROW
BEGIN
	declare serviceSum int;
	select fltServiceSum into serviceSum from tblvisit where (intVisitId = old.intVisitId);
	set serviceSum = serviceSum - old.fltServiceSum;
	update tblvisit set fltServiceSum = serviceSum where (intVisitId = old.intVisitId);
END$$

USE `hotel`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `hotel`.`tblservice_AFTER_INSERT`
AFTER INSERT ON `hotel`.`tblservice`
FOR EACH ROW
BEGIN
	declare amount int;

	select count(*) into amount 
    from tblservice 
    where (intVisitId = new.intVisitId 
	and intServiceTypeId = new.intServiceTypeId 
	and datServiceDate = new.datServiceDate);
    
    if (amount > 1 or new.intServiceCount > 1) then 
		delete from tblservice 
		where (intServiceId = new.intServiceId);
    end if;
END$$

USE `hotel`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `hotel`.`tblservice_AFTER_INSERT_1`
AFTER INSERT ON `hotel`.`tblservice`
FOR EACH ROW
BEGIN
	declare serviceSum int;
	select fltServiceSum into serviceSum from tblvisit where (intVisitId = new.intVisitId);
	set serviceSum = serviceSum + new.fltServiceSum;
	update tblvisit set fltServiceSum = serviceSum where (intVisitId = new.intVisitId);
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
